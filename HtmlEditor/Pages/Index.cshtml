@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<form method="post">
        Personal Details:
        <textarea cols="20" rows="3" name="PersonalDetails"></textarea>
        <br/><br/>
        <input type="submit" value="Submit" asp-page-handler="Submit"/>
        <br/>
        <span>@Html.Raw(Model.PersonalDetails)</span>
    </form>
 
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/tinymce/5.10.2/tinymce.min.js"></script>
    <script type="text/javascript">
        tinymce.init(
            {
                selector: 'textarea',
                menubar: 'insert',
                plugins: 'print preview paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons',
                // toolbar: 'undo redo | styleselect | fontselect | fontsizeselect | forecolor | bold italic underline | alignleft aligncenter alignright alignjustify | outdent indent | link image | code',
                toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile link image media template anchor codesample | ltr rtl',
                toolbar_mode: 'sliding',
                file_picker_callback: function (cb, value, meta) {
                     var input = document.createElement('input');
                        input.setAttribute('type', 'file');
                        input.setAttribute('accept', 'image/*');
                         input.onchange = function () {
                              var file = this.files[0];
                        
                              var reader = new FileReader();
                              reader.onload = function () {
                                /*
                                  Note: Now we need to register the blob in TinyMCEs image blob
                                  registry. In the next release this part hopefully won't be
                                  necessary, as we are looking to handle it internally.
                                */
                                var id = 'blobid' + (new Date()).getTime();
                                var blobCache =  tinymce.activeEditor.editorUpload.blobCache;
                                var base64 = reader.result.split(',')[1];
                                var blobInfo = blobCache.create(id, file, base64);
                                blobCache.add(blobInfo);
                        
                                /* call the callback and populate the Title field with the file name */
                                cb(blobInfo.blobUri(), { title: file.name });
                              };
                              reader.readAsDataURL(file);
                            };
                        
                            input.click();
                    }
            });
    </script>